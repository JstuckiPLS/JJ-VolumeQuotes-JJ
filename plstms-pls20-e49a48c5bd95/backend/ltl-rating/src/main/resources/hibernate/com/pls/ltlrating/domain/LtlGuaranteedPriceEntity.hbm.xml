<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <query name="com.pls.ltlrating.domain.LtlGuaranteedPriceEntity.FIND_BY_PROFILE_ID">
        <![CDATA[
                from LtlGuaranteedPriceEntity lgpe where lgpe.ltlPricProfDetailId = :priceProfileId
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.LtlGuaranteedPriceEntity.FIND_ACTIVE_AND_EFFECTIVE_FOR_PROFILE">
        <![CDATA[
                from LtlGuaranteedPriceEntity lgpe where lgpe.status = 'A' and
                (lgpe.expDate is null or lgpe.expDate > LOCALTIMESTAMP) and
                lgpe.ltlPricProfDetailId = :priceProfileId
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.LtlGuaranteedPriceEntity.FIND_ACTIVE_AND_EFFECTIVE">
        <![CDATA[
                select lgpe.id as id, lgpe.chargeRuleType as chargeRuleType, lgpe.unitCost as unitCost,
                lgpe.minCost as minCost, lgpe.time as time, lgpe.ltlPricProfDetailId as ltlPricProfDetailId
                from LtlGuaranteedPriceEntity lgpe where lgpe.status = 'A' and
                (lgpe.expDate is null or lgpe.expDate > LOCALTIMESTAMP) and
                lgpe.ltlPricProfDetailId = :priceProfileId
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.LtlGuaranteedPriceEntity.FIND_BY_STATUS_AND_PROFILE_ID">
        <![CDATA[
                select lgpe.id as id, lgpe.chargeRuleType as chargeRuleType, lgpe.unitCost as unitCost,
                lgpe.minCost as minCost, lgpe.time as time, lgpe.ltlPricProfDetailId as ltlPricProfDetailId
                from LtlGuaranteedPriceEntity lgpe where lgpe.status = :status and lgpe.ltlPricProfDetailId = :priceProfileId
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.LtlGuaranteedPriceEntity.FIND_EXPIRED">
        <![CDATA[
                select lgpe.id as id, lgpe.chargeRuleType as chargeRuleType, lgpe.unitCost as unitCost,
                lgpe.minCost as minCost, lgpe.time as time, lgpe.ltlPricProfDetailId as ltlPricProfDetailId
                from LtlGuaranteedPriceEntity lgpe where lgpe.status = 'A' and
                lgpe.expDate < LOCALTIMESTAMP and lgpe.ltlPricProfDetailId = :priceProfileId
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.LtlGuaranteedPriceEntity.UPDATE_STATUS">
        <![CDATA[
                UPDATE LtlGuaranteedPriceEntity lgpe SET lgpe.status = :status, lgpe.modification.modifiedDate = LOCALTIMESTAMP
                , lgpe.modification.modifiedBy = :modifiedBy WHERE lgpe.id in :ids
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.LtlGuaranteedPriceEntity.INACTIVATE_BY_PROFILE_STATEMENT">
        <![CDATA[
                UPDATE LtlGuaranteedPriceEntity lgpe SET lgpe.status = 'I'
                , lgpe.modification.modifiedDate = LOCALTIMESTAMP
                , lgpe.modification.modifiedBy = :modifiedBy
                WHERE lgpe.ltlPricProfDetailId = :id AND lgpe.status = 'A' AND (lgpe.expDate >= LOCALTIMESTAMP OR lgpe.expDate IS NULL)
                AND lgpe.effDate < LOCALTIMESTAMP
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.LtlGuaranteedPriceEntity.EXPIRE_BY_IDS">
        <![CDATA[
                UPDATE LtlGuaranteedPriceEntity lgpe SET lgpe.expDate = current_date, lgpe.modification.modifiedDate = LOCALTIMESTAMP
                , lgpe.modification.modifiedBy = :modifiedBy WHERE lgpe.id IN (:ids)
        ]]>
    </query>
    <sql-query name="com.pls.ltlrating.domain.LtlGuaranteedPriceEntity.FIND_CSP_ENTITY_BY_COPIED_FROM">
        <return class="com.pls.ltlrating.domain.LtlGuaranteedPriceEntity"/>
        <![CDATA[
                SELECT gp.*
                FROM ltl_guaranteed_price gp
                JOIN ltl_pricing_profile_details ppd ON ppd.ltl_pric_prof_detail_id = gp.ltl_pric_prof_detail_id
                JOIN ltl_pricing_profile pp ON pp.ltl_pricing_profile_id = ppd.ltl_pricing_profile_id AND pp.ltl_pricing_type = 'BLANKET_CSP'
                WHERE gp.copied_from = :id
        ]]>
    </sql-query>
    <sql-query name="com.pls.ltlrating.domain.LtlGuaranteedPriceEntity.EXPIRATE_CSP_BY_COPIED_FROM_STATEMENT">
        <![CDATA[
                UPDATE ltl_guaranteed_price lgp
                SET exp_date = current_date, modified_by = :modifiedBy, date_modified = LOCALTIMESTAMP
                WHERE lgp.ltl_guaranteed_price_id IN (SELECT gp.ltl_guaranteed_price_id FROM ltl_guaranteed_price gp
                JOIN ltl_pricing_profile_details ppd ON ppd.ltl_pric_prof_detail_id = gp.ltl_pric_prof_detail_id
                JOIN ltl_pricing_profile pp ON pp.ltl_pricing_profile_id = ppd.ltl_pricing_profile_id AND pp.ltl_pricing_type = 'BLANKET_CSP'
                WHERE gp.copied_from IN (:ownerIds))
        ]]>
    </sql-query>
    <sql-query name="com.pls.ltlrating.domain.LtlGuaranteedPriceEntity.UPDATE_CSP_STATUS_BY_COPIED_FROM_STATEMENT">
        <![CDATA[
                UPDATE ltl_guaranteed_price lgp
                SET status = :status , modified_by = :modifiedBy, date_modified = LOCALTIMESTAMP
                WHERE lgp.ltl_guaranteed_price_id IN (SELECT gp.ltl_guaranteed_price_id FROM ltl_guaranteed_price gp
                JOIN ltl_pricing_profile_details ppd ON ppd.ltl_pric_prof_detail_id = gp.ltl_pric_prof_detail_id
                JOIN ltl_pricing_profile pp ON pp.ltl_pricing_profile_id = ppd.ltl_pricing_profile_id AND pp.ltl_pricing_type = 'BLANKET_CSP'
                WHERE gp.copied_from IN (:ownerIds))
        ]]>
    </sql-query>
    <sql-query name="com.pls.ltlrating.domain.LtlGuaranteedPriceEntity.INACTIVATE_CSP_BY_DETAIL_ID">
        <![CDATA[
                UPDATE LTL_GUARANTEED_PRICE lgp SET status = 'I', modified_by = :modifiedBy, date_modified = LOCALTIMESTAMP
                WHERE lgp.ltl_pric_prof_detail_id IN (SELECT pd.ltl_pric_prof_detail_id
                FROM ltl_pricing_profile p
                JOIN ltl_pricing_profile_details pd ON pd.ltl_pricing_profile_id = p.ltl_pricing_profile_id
                WHERE p.ltl_pricing_type = 'BLANKET_CSP' AND p.copied_from = (SELECT pp.ltl_pricing_profile_id
                FROM ltl_pricing_profile pp
                JOIN ltl_pricing_profile_details ppd ON ppd.ltl_pricing_profile_id = pp.ltl_pricing_profile_id
                AND ppd.ltl_pric_prof_detail_id = :ownerId))
        ]]>
    </sql-query>
</hibernate-mapping>