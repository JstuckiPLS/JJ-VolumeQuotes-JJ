<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <query name="com.pls.ltlrating.domain.LtlBlockCarrGeoServicesEntity.UPDATE_STATUS_STATEMENT">
        <![CDATA[
                UPDATE LtlBlockCarrGeoServicesEntity lbcgs SET lbcgs.status = :status
                , lbcgs.modification.modifiedDate = LOCALTIMESTAMP, lbcgs.modification.modifiedBy = :modifiedBy
                WHERE lbcgs.id in :ids
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.LtlBlockCarrGeoServicesEntity.INACTIVATE_BY_PROFILE_ID">
        <![CDATA[
                UPDATE LtlBlockCarrGeoServicesEntity SET status = 'I', modification.modifiedDate = LOCALTIMESTAMP,
                modification.modifiedBy = :modifiedBy WHERE profileId = :id AND status = 'A'
        ]]>
    </query>
    <sql-query name="com.pls.ltlrating.domain.LtlBlockCarrGeoServicesEntity.FIND_CSP_ENTITY_BY_COPIED_FROM">
        <return class="com.pls.ltlrating.domain.LtlBlockCarrGeoServicesEntity"/>
        <![CDATA[
                SELECT bc.*
                FROM ltl_block_carr_geo_services bc
                JOIN ltl_pricing_profile_details ppd ON ppd.ltl_pric_prof_detail_id = bc.ltl_pric_prof_detail_id
                JOIN ltl_pricing_profile pp ON pp.ltl_pricing_profile_id = ppd.ltl_pricing_profile_id AND pp.ltl_pricing_type = 'BLANKET_CSP'
                WHERE bc.copied_from = :id
        ]]>
    </sql-query>
    <sql-query name="com.pls.ltlrating.domain.LtlBlockCarrGeoServicesEntity.UPDATE_STATUS_CHILD_CSP_STATEMENT">
        <![CDATA[
                UPDATE ltl_block_carr_geo_services lbc
                SET status = :status, date_modified = LOCALTIMESTAMP, modified_by = :modifiedBy
                WHERE lbc.ltl_block_carr_geo_service_id IN (
                SELECT bc.ltl_block_carr_geo_service_id
                FROM ltl_block_carr_geo_services bc
                JOIN ltl_pricing_profile_details ppd ON ppd.ltl_pric_prof_detail_id = bc.ltl_pric_prof_detail_id
                JOIN ltl_pricing_profile pp ON pp.ltl_pricing_profile_id = ppd.ltl_pricing_profile_id AND pp.ltl_pricing_type = 'BLANKET_CSP'
                WHERE bc.copied_from IN (:ownerIds))
        ]]>
    </sql-query>
    <sql-query name="com.pls.ltlrating.domain.LtlBlockCarrGeoServicesEntity.INACTIVATE_CSP_BY_DETAIL_ID">
        <![CDATA[
                UPDATE LTL_BLOCK_CARR_GEO_SERVICES lbcz SET status = 'I', modified_by = :modifiedBy, date_modified = LOCALTIMESTAMP
                WHERE lbcz.ltl_pric_prof_detail_id IN (SELECT pd.ltl_pric_prof_detail_id
                FROM ltl_pricing_profile p
                JOIN ltl_pricing_profile_details pd ON pd.ltl_pricing_profile_id = p.ltl_pricing_profile_id
                WHERE p.ltl_pricing_type = 'BLANKET_CSP' AND p.copied_from = (SELECT pp.ltl_pricing_profile_id
                FROM ltl_pricing_profile pp
                JOIN ltl_pricing_profile_details ppd ON ppd.ltl_pricing_profile_id = pp.ltl_pricing_profile_id
                AND ppd.ltl_pric_prof_detail_id = :ownerId))
        ]]>
    </sql-query>
    <sql-query name="com.pls.ltlrating.domain.LtlBlockCarrGeoServicesEntity.DELETE_GEO_SERVICE_DTLS_BY_SERVICE_ID">
        <![CDATA[
                DELETE FROM LTL_BK_CARR_GEO_SERV_DTLS
                WHERE LTL_BK_CARR_GEO_SERV_DTL_ID in (:geoServiceId)
        ]]>
    </sql-query>
    <sql-query name="com.pls.ltlrating.domain.LtlBlockCarrGeoServicesEntity.FIND_BY_STATUS_AND_PROFILE_ID">
        <return-scalar column="id" type="long"/>
        <return-scalar column="profileId" type="long"/>
        <return-scalar column="origin" type="string"/>
        <return-scalar column="destination" type="string"/>
        <return-scalar column="status" type="string"/>
        <return-scalar column="notes" type="string"/>
        <![CDATA[
            SELECT lbcgs.ltl_block_carr_geo_service_id as id, lbcgs.ltl_pric_prof_detail_id as profileId, lbcgs.status,
                (select string_agg(orig.GEO_VALUE, ',')
                from (
                    select distinct lbcgsdo.GEO_VALUE
                    from LTL_BK_CARR_GEO_SERV_DTLS lbcgsdo
                    where lbcgsdo.ltl_block_carr_geo_service_id = lbcgs.ltl_block_carr_geo_service_id
                        and lbcgsdo.geo_type = 1) orig
                ) as origin,
                (select string_agg(dest.GEO_VALUE, ',')
                from (
                    select distinct lbcgsdd.GEO_VALUE
                    from LTL_BK_CARR_GEO_SERV_DTLS lbcgsdd
                    where lbcgsdd.ltl_block_carr_geo_service_id = lbcgs.ltl_block_carr_geo_service_id
                        and lbcgsdd.geo_type = 2) dest
                ) as destination,
                lbcgs.notes
            FROM LTL_BLOCK_CARR_GEO_SERVICES lbcgs
            WHERE lbcgs.ltl_pric_prof_detail_id = :profileId and lbcgs.status = :status
        ]]>
    </sql-query>
</hibernate-mapping>