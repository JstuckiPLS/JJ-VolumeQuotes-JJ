<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <query name="com.pls.ltlrating.domain.analysis.FAFinancialAnalysisEntity.Q_UPDATE_ANALYSIS_STATUS">
        <![CDATA[
                UPDATE FAFinancialAnalysisEntity SET status = :status, modification.modifiedDate = LOCALTIMESTAMP, modification.modifiedBy = :modifiedBy
                WHERE id = :id
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.analysis.FAFinancialAnalysisEntity.Q_GET_ANALYSIS_STATUS">
        <![CDATA[
                select status from FAFinancialAnalysisEntity WHERE id = :id
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.analysis.FAFinancialAnalysisEntity.Q_GET_FOR_PROCESSING">
        <![CDATA[
                select distinct
                    i.id as rowId,
                    a.id as analysisId,
                    case when t.tariffType = 'SMC3' then t.id else null end as tariffId,
                    t.customerId as customerId,
                    a.seq as analysisSequenceNumber,
                    i.seq as rowSequenceNumber
                from FAFinancialAnalysisEntity a
                join a.inputDetails i with i.completed = 'N'
                join a.tariffs t
                where a.status = 'P'
                    and not exists (select 1 from FAOutputDetailsEntity o
                                    where o.inputDetails.id = i.id and o.tariff.id = t.id)
                order by a.seq, i.seq
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.analysis.FAFinancialAnalysisEntity.Q_MARK_ROW_COMPLETED">
        <![CDATA[
                UPDATE FAInputDetailsEntity SET completed = 'Y'
                WHERE id = :rowId
                    and not exists (select 1
                                    from FAInputDetailsEntity i
                                    join i.analysis a
                                    join a.tariffs t
                                    where i.id = :rowId
                                       and not exists (select 1 from FAOutputDetailsEntity o
                                                       join o.tariff ot
                                                       where o.inputDetails.id = i.id and ot.id = t.id))
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.analysis.FAFinancialAnalysisEntity.Q_MARK_ANALYSIS_COMPLETED">
        <![CDATA[
                UPDATE FAFinancialAnalysisEntity SET status = 'C'
                WHERE id = :analysisId
                    and status <> 'C'
                    and not exists(select 1
                                   from FAInputDetailsEntity i
                                   where i.analysis.id = :analysisId and i.completed <> 'Y')
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.analysis.FAFinancialAnalysisEntity.Q_GET_ANALYSIS_JOBS">
        <![CDATA[
                select
                    a.id as analysisId,
                    a.inputFileName as uploadedFileName,
                    inpf.id as uploadedDocId,
                    inpf.modification.createdDate as uploadDate,
                    a.outputFileName as completedFileName,
                    a.status as status,
                    a.seq as seqNumber,
                    sum(case when id.completed = 'Y' then 1 else 0 end) || ' of ' || count(id) as completedTariffCounts,
                    case when a.status = 'S' or a.status = 'C' then outf.id end as completedDocId
                from FAFinancialAnalysisEntity a
                left join a.inputFile inpf
                left join a.outputFile outf
                left join a.inputDetails id
                where a.status != 'D'
                group by a.id, a.inputFileName, inpf.id, inpf.modification.createdDate,
                a.outputFileName, a.status, a.seq, outf.id
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.analysis.FAFinancialAnalysisEntity.Q_GET_NEXT_ANALYSIS_BY_SEQ_NUMBER">
        <![CDATA[
                from FAFinancialAnalysisEntity a
                where a.status != 'D'
                and ((:step = true and a.seq > :seqNumber) or (:step = false and a.seq < :seqNumber))
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.analysis.FAFinancialAnalysisEntity.Q_GET_NEXT_SEQ_NUMBER">
         <![CDATA[
                select max(id)
                from FAFinancialAnalysisEntity
         ]]>
   </query>
   <query name="com.pls.ltlrating.domain.analysis.FAFinancialAnalysisEntity.U_SET_DOCUMENT">
         <![CDATA[
                update FAFinancialAnalysisEntity set outputFile.id = :documentId where id = :analysisId
         ]]>
   </query>
   <query name="com.pls.ltlrating.domain.analysis.FAFinancialAnalysisEntity.Q_GET_WITH_DEPENDENCIES">
         <![CDATA[
                select e
                from FAFinancialAnalysisEntity e
                left join fetch e.inputDetails i
                left join fetch e.tariffs t
                left join fetch i.outputDetails
                left join fetch i.accessorials
                left join fetch i.materials
                where e.id = :analysisId
         ]]>
   </query>
   <query name="com.pls.ltlrating.domain.analysis.FAFinancialAnalysisEntity.U_DELETE_INCORRECT_OUTPUT">
        <![CDATA[
                delete from FAOutputDetailsEntity
                where id in (
                    select distinct o.id
                    from FAOutputDetailsEntity o
                    join o.inputDetails i
                    where i.completed = 'N'
                )
        ]]>
    </query>
</hibernate-mapping>
