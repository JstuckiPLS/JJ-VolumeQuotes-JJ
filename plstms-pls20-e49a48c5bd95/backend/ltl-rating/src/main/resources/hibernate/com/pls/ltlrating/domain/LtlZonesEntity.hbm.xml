<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <query name="com.pls.ltlrating.domain.LtlZonesEntity.UPDATE_STATUS_STATEMENT">
        <![CDATA[
                UPDATE LtlZonesEntity lze SET lze.status = :status
                , lze.modification.modifiedBy = :modifiedBy
                , lze.modification.modifiedDate = LOCALTIMESTAMP
                WHERE lze.id = :id
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.LtlZonesEntity.INACTIVATE_BY_PROFILE_ID">
        <![CDATA[
                UPDATE
                LtlZonesEntity SET status = 'I', modification.modifiedDate = LOCALTIMESTAMP,
                modification.modifiedBy = :modifiedBy WHERE ltlPricProfDetailId = :id AND status = 'A'
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.LtlZonesEntity.GET_ZONE_WITH_MATCHING_NAME">
        <![CDATA[
                SELECT lze
                FROM LtlZonesEntity lze where lze.ltlPricProfDetailId = :id and name = (select lz.name from LtlZonesEntity lz
                WHERE lz.id = :zoneId)
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.LtlZonesEntity.GET_ZONE_BY_PROFILE_DETAIL_ID_AND_NAME">
        <![CDATA[
                SELECT lze
                FROM LtlZonesEntity lze where lze.ltlPricProfDetailId = :profileDetailId and UPPER(lze.name) = UPPER(:name) and lze.status = 'A'
        ]]>
    </query>
    <sql-query name="com.pls.ltlrating.domain.LtlZonesEntity.FIND_CSP_ENTITY_BY_COPIED_FROM">
        <return class="com.pls.ltlrating.domain.LtlZonesEntity"/>
        <![CDATA[
                SELECT lz.*
                FROM ltl_zones lz
                JOIN ltl_pricing_profile_details ppd ON ppd.ltl_pric_prof_detail_id = lz.ltl_pric_prof_detail_id
                JOIN ltl_pricing_profile pp ON pp.ltl_pricing_profile_id = ppd.ltl_pricing_profile_id AND pp.ltl_pricing_type = 'BLANKET_CSP'
                WHERE lz.copied_from = :id
        ]]>
    </sql-query>
    <sql-query name="com.pls.ltlrating.domain.LtlZonesEntity.UPDATE_CSP_STATUS_BY_COPIED_FROM_STATEMENT">
        <![CDATA[
                UPDATE ltl_zones ltlz SET status = :status, modified_by = :modifiedBy, date_modified = LOCALTIMESTAMP
                WHERE ltlz.ltl_zone_id IN (SELECT lz.ltl_zone_id
                FROM ltl_zones lz
                JOIN ltl_pricing_profile_details ppd ON ppd.ltl_pric_prof_detail_id = lz.ltl_pric_prof_detail_id
                JOIN ltl_pricing_profile pp ON pp.ltl_pricing_profile_id = ppd.ltl_pricing_profile_id AND pp.ltl_pricing_type = 'BLANKET_CSP'
                WHERE lz.copied_from IN (:ownersId))
        ]]>
    </sql-query>
    <sql-query name="com.pls.ltlrating.domain.LtlZonesEntity.INACTIVATE_CSP_BY_DETAIL_ID">
        <![CDATA[
                UPDATE ltl_zones ltlz SET status = 'I', modified_by = :modifiedBy, date_modified = LOCALTIMESTAMP
                WHERE ltlz.ltl_pric_prof_detail_id IN (SELECT pd.ltl_pric_prof_detail_id
                FROM ltl_pricing_profile p
                JOIN ltl_pricing_profile_details pd ON pd.ltl_pricing_profile_id = p.ltl_pricing_profile_id
                WHERE p.ltl_pricing_type = 'BLANKET_CSP' AND p.copied_from = (SELECT pp.ltl_pricing_profile_id
                FROM ltl_pricing_profile pp
                JOIN ltl_pricing_profile_details ppd ON ppd.ltl_pricing_profile_id = pp.ltl_pricing_profile_id
                AND ppd.ltl_pric_prof_detail_id = :ownerId))
        ]]>
    </sql-query>
    <sql-query name="com.pls.ltlrating.domain.LtlZonesEntity.GET_ZONE_BY_STATUS_AND_PROFILE_ID">
        <return-scalar column="status" type="string"/>
        <return-scalar column="name" type="string"/>
        <return-scalar column="geography" type="string"/>
        <return-scalar column="id" type="long"/>
        <return-scalar column="profileId" type="long"/>
        <![CDATA[
                SELECT lz.ltl_zone_id as id, lz.ltl_pric_prof_detail_id as profileId, lz.status, lz.name,
                    (select string_agg(details.geo_value, ',')
                     from (
                        select distinct dtls.geo_value
                        from ltl_zone_geo_serv_dtls dtls
                        where lzgs.ltl_zone_geo_service_id = dtls.ltl_zone_geo_service_id) details
                    ) as geography
                FROM ltl_zones lz
                JOIN ltl_zone_geo_services lzgs on lz.ltl_zone_id = lzgs.ltl_zone_id
                WHERE lz.ltl_pric_prof_detail_id = :profileDetailId and lz.status = :status
        ]]>
    </sql-query>
    <sql-query name="com.pls.ltlrating.domain.LtlZonesEntity.GET_MISSING_ZONES">
        <![CDATA[
                SELECT lz.name
                from ltl_zones lz
                where lz.ltl_pric_prof_detail_id = :fromProfileId
                    and status = 'A'
                    and lz.name not in (
                        select name
                        from ltl_zones
                        where ltl_pric_prof_detail_id  = :toProfileId
                            and status = 'A'
                    )
                    and lz.ltl_zone_id in (
                        select zone_from
                        from ltl_pallet_pric_details
                        where ltl_pric_prof_detail_id = :fromProfileId
                            and status = 'A'
                            and (exp_date is null or LOCALTIMESTAMP <= exp_date)
                        union
                        select zone_to
                        from ltl_pallet_pric_details
                        where ltl_pric_prof_detail_id = :fromProfileId
                            and status = 'A'
                            and (exp_date is null or LOCALTIMESTAMP <= exp_date)
                    )
        ]]>
    </sql-query>
</hibernate-mapping>