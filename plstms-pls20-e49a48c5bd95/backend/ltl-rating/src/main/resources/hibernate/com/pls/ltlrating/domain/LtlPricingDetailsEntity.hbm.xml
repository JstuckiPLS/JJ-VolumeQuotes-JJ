<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <query name="com.pls.ltlrating.domain.LtlPricingDetailsEntity.UPDATE_STATUS_STATEMENT">
        <![CDATA[
                UPDATE LtlPricingDetailsEntity lpde SET lpde.status = :status, lpde.modification.modifiedDate = LOCALTIMESTAMP
                , lpde.modification.modifiedBy = :modifiedBy WHERE lpde.id IN (:ids)
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.LtlPricingDetailsEntity.INACTIVATE_BY_PROFILE_STATEMENT">
        <![CDATA[
                UPDATE LtlPricingDetailsEntity lpde SET lpde.status = 'I'
                , lpde.modification.modifiedDate = LOCALTIMESTAMP
                , lpde.modification.modifiedBy = :modifiedBy
                WHERE lpde.ltlPricProfDetailId = :id AND lpde.status = 'A'
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.LtlPricingDetailsEntity.EXPIRATE_STATEMENT">
        <![CDATA[
                UPDATE LtlPricingDetailsEntity lpde SET lpde.expDate = current_date, lpde.modification.modifiedDate = LOCALTIMESTAMP
                , lpde.modification.modifiedBy = :modifiedBy
                WHERE lpde.id IN (:ids)
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.LtlPricingDetailsEntity.FIND_BY_COPIED_FROM_QUERY">
        <![CDATA[
                FROM LtlPricingDetailsEntity lpde WHERE lpde.copiedFrom = :copiedFrom
        ]]>
    </query>
    <query name="com.pls.ltlrating.domain.LtlPricingDetailsEntity.FIND_ACTIVE_FOR_PROFILE_QUERY">
        <![CDATA[
                FROM LtlPricingDetailsEntity lpde
                WHERE lpde.ltlPricProfDetailId = :detailId AND lpde.status = 'A' AND
                (lpde.expDate IS NULL OR lpde.expDate > LOCALTIMESTAMP)
                ORDER BY lpde.id ASC
        ]]>
    </query>
    <sql-query name="com.pls.ltlrating.domain.LtlPricingDetailsEntity.FIND_BY_STATUS">
        <return-scalar column="id" type="long"/>
        <return-scalar column="profileId" type="long"/>
        <return-scalar column="minCost" type="string"/>
        <return-scalar column="costType" type="string"/>
        <return-scalar column="unitCost" type="java.math.BigDecimal"/>
        <return-scalar column="origin" type="string"/>
        <return-scalar column="destination" type="string"/>
        <![CDATA[
            SELECT distinct coalesce(blanketCspLpd.ltl_pricing_detail_id, lpd.ltl_pricing_detail_id) as id,
                coalesce(blanketCspLpd.ltl_pric_prof_detail_id, lpd.ltl_pric_prof_detail_id) as profileId,
                lpd.min_cost as minCost,
                lpd.cost_type as costType,
                lpd.unit_cost as unitCost,
                (select string_agg(orig.geo_value, ', ')
                 from (
                    select orig_geo.geo_value
                    from ltl_pricing_geo_services lpgs
                    join ltl_pric_geo_serv_dtls orig_geo on orig_geo.ltl_pricing_geo_service_id = lpgs.ltl_pricing_geo_service_id and orig_geo.geo_type = 1
                    where lpgs.ltl_pricing_detail_id = lpd.ltl_pricing_detail_id
                    ORDER BY orig_geo.geo_value
                    LIMIT 100) orig
                ) origin,
                (select string_agg(dest.geo_value, ', ')
                 from (
                    select dest_geo.geo_value
                    from ltl_pricing_geo_services lpgs
                    join ltl_pric_geo_serv_dtls dest_geo on dest_geo.ltl_pricing_geo_service_id = lpgs.ltl_pricing_geo_service_id and dest_geo.geo_type = 2
                    where lpgs.ltl_pricing_detail_id = lpd.ltl_pricing_detail_id
                    ORDER BY dest_geo.geo_value
                    LIMIT 100) dest
                ) destination
            FROM ltl_pricing_details lpd
            left join ltl_pricing_details blanketCspLpd on lpd.LTL_PRICING_DETAIL_ID = blanketCspLpd.PARENT_ID
                                                        and blanketCspLpd.ltl_pric_prof_detail_id = :detailId
            WHERE lpd.ltl_pric_prof_detail_id = coalesce(
                    -- this subquery will find pricing profile detail ID of corresponding Blanket profile for Blanket/CSP profile only
                    (select lppdBlanket.ltl_pric_prof_detail_id from LTL_PRICING_PROFILE_DETAILS lppd
                        join LTL_PRICING_PROFILE lpp on lpp.ltl_pricing_profile_id = lppd.ltl_pricing_profile_id and lpp.LTL_PRICING_TYPE = 'BLANKET_CSP'
                        join LTL_PRICING_PROFILE lppBlanket on lppBlanket.carrier_org_id = lpp.carrier_org_id
                                                            and lppBlanket.LTL_PRICING_TYPE = 'BLANKET' and lppBlanket.status = 'A'
                        join LTL_PRICING_PROFILE_DETAILS lppdBlanket on lppBlanket.ltl_pricing_profile_id = lppdBlanket.ltl_pricing_profile_id
                        where lppd.LTL_PRIC_PROF_DETAIL_ID = :detailId),
                    :detailId)
                and lpd.status = :status
                and (:status = 'I'
                    or (:expired = 1 and lpd.exp_date is not null and lpd.exp_date <= LOCALTIMESTAMP)
                    or (:expired = 0 and (lpd.exp_date is null or lpd.exp_date > LOCALTIMESTAMP))
                )
            ORDER BY 1
        ]]>
    </sql-query>
    <sql-query name="com.pls.ltlrating.domain.LtlPricingDetailsEntity.EXPIRATE_CPS_BY_COPIED_FROM_STATEMENT">
        <![CDATA[
                UPDATE ltl_pricing_details lpd
                SET exp_date = current_date, date_modified = LOCALTIMESTAMP, modified_by = :modifiedBy
                WHERE lpd.ltl_pricing_detail_id in (
                SELECT pd.ltl_pricing_detail_id
                FROM ltl_pricing_details pd
                JOIN ltl_pricing_profile_details ppd ON ppd.ltl_pric_prof_detail_id = pd.ltl_pric_prof_detail_id
                JOIN ltl_pricing_profile pp ON pp.ltl_pricing_profile_id = ppd.ltl_pricing_profile_id AND pp.ltl_pricing_type = 'BLANKET_CSP'
                WHERE pd.copied_from IN (:ownerIds))
        ]]>
    </sql-query>
    <sql-query name="com.pls.ltlrating.domain.LtlPricingDetailsEntity.UPDATE_CSP_STATUS_BY_COPIED_FROM_STATEMENT">
        <![CDATA[
                UPDATE ltl_pricing_details lpd
                SET status = :status, date_modified = LOCALTIMESTAMP, modified_by = :modifiedBy
                WHERE lpd.ltl_pricing_detail_id in (
                SELECT pd.ltl_pricing_detail_id
                FROM ltl_pricing_details pd
                JOIN ltl_pricing_profile_details ppd ON ppd.ltl_pric_prof_detail_id = pd.ltl_pric_prof_detail_id
                JOIN ltl_pricing_profile pp ON pp.ltl_pricing_profile_id = ppd.ltl_pricing_profile_id AND pp.ltl_pricing_type = 'BLANKET_CSP'
                WHERE pd.copied_from IN (:ownerIds))
        ]]>
    </sql-query>
</hibernate-mapping>