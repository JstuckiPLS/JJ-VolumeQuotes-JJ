<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
                           http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd"
       profile="JMSServer">

    <context:component-scan base-package="com.pls.ltlrating.batch" />

    <batch:job id="analysePricing">
        <batch:step id="analyse">
            <batch:tasklet>
                <batch:chunk commit-interval="1" retry-limit="5">
                    <batch:reader>
                        <bean class="com.pls.ltlrating.batch.analysis.AnalysisItemReader" scope="step"/>
                    </batch:reader>
                    <batch:processor>
                        <bean class="com.pls.ltlrating.batch.analysis.AnalysisItemProcessor" scope="step">
                            <property name="sessionFactory" ref="sessionFactory"/>
                        </bean>
                    </batch:processor>
                    <batch:writer>
                        <bean class="com.pls.ltlrating.batch.analysis.AnalysisItemPersister" scope="step"/>
                    </batch:writer>
                    <batch:skip-policy>
                        <bean class="org.springframework.batch.core.step.skip.AlwaysSkipItemSkipPolicy"/>
                    </batch:skip-policy>
                    <batch:listeners>
                        <batch:listener>
                            <bean class="com.pls.ltlrating.batch.analysis.AnalysisItemSkipListener" scope="step"/>
                        </batch:listener>
                    </batch:listeners>
                    <batch:retryable-exception-classes>
                        <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException"/>
                        <batch:include class="org.hibernate.exception.LockAcquisitionException"/>
                    </batch:retryable-exception-classes>
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
        <batch:listeners>
            <batch:listener ref="analysisJobOperator"/>
        </batch:listeners>
    </batch:job>

    <bean id="analysisTaskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor"/>

    <bean id="analysisJobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository"/>
        <property name="taskExecutor" ref="analysisTaskExecutor"/>
    </bean>

    <bean class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean">
        <property name="dataSource" ref="transactionAwareDataSource" />
    </bean>

    <jms:listener-container container-type="default" connection-factory="analysisCachingConnectionFactory" acknowledge="transacted">
        <jms:listener destination="PLS.AnalysisQueue" ref="analysisMessageListener" method="onMessage"/>
    </jms:listener-container>
</beans>