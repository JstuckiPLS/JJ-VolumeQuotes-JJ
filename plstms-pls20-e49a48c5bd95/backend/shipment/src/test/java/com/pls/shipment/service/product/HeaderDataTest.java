package com.pls.shipment.service.product;import com.pls.core.exception.fileimport.ImportFileInvalidDataException;import com.pls.shipment.service.product.impl.HeaderData;import com.pls.shipment.service.product.impl.ProductExcelFields;import org.apache.poi.ss.usermodel.Row;import org.apache.poi.ss.usermodel.Sheet;import org.apache.poi.ss.usermodel.Workbook;import org.apache.poi.xssf.usermodel.XSSFWorkbook;import org.junit.Assert;import org.junit.Test;/** * Test cases for {@link com.pls.shipment.service.product.impl.HeaderData} class. *  * @author Maxim Medvedev */public class HeaderDataTest {    private final HeaderData sut = new HeaderData();    @Test(expected = ImportFileInvalidDataException.class)    public void testHasData_EmptyHeaderRow() throws Exception {        Row headerRow = createRow();        sut.readData(headerRow);    }    @Test    public void testHasData_FullHeaderRow() throws Exception {        Row headerRow = createRow();        ProductExcelFields[] fields = ProductExcelFields.values();        for (int indx = 0; indx < fields.length; indx++) {            headerRow.createCell(indx).setCellValue(fields[indx].getHeader());        }        sut.readData(headerRow);        Assert.assertTrue(sut.hasData());    }    @Test    public void testHasData_MinimalHeaderRow() throws Exception {        Row headerRow = createRow();        ProductExcelFields[] fields = ProductExcelFields.values();        for (int indx = 0; indx < fields.length; indx++) {            if (fields[indx].isRequired()) {                headerRow.createCell(indx).setCellValue(fields[indx].getHeader());            }        }        sut.readData(headerRow);        Assert.assertTrue(sut.hasData());    }    @Test    public void testHasData_NullRow() throws Exception {        sut.readData(null);        Assert.assertFalse(sut.hasData());    }    @Test(expected = ImportFileInvalidDataException.class)    public void testHasData_UnexpectedColumns() throws Exception {        Row headerRow = createRow();        headerRow.createCell(0).setCellValue("Some Column");        sut.readData(headerRow);    }    private Row createRow() {        Workbook wb = new XSSFWorkbook();        Sheet sheet = wb.createSheet("Test");        return sheet.createRow(0);    }}