package com.pls.shipment.domain;import java.io.Serializable;import javax.persistence.Column;import javax.persistence.Entity;import javax.persistence.Id;import javax.persistence.Table;import org.apache.commons.lang3.builder.EqualsBuilder;import org.apache.commons.lang3.builder.HashCodeBuilder;import org.apache.commons.lang3.builder.ToStringBuilder;import org.hibernate.annotations.Immutable;import com.pls.core.domain.Identifiable;/** * Indicates the type of packaging being used to transport the material. *  * @author Maxim Medvedev */@Entity@Immutable@Table(name = "PACKAGE_TYPES")public class PackageTypeEntity implements Identifiable<String>, Serializable {    private static final int LENGTH_DESCRIPTION = 50;    private static final int LENGTH_ID = 2;    private static final long serialVersionUID = 7660758233064747378L;    public static final String GET_ALL_SORT_BY_DESCRIPTION = "com.pls.shipment.domain.PackageTypeEntity.GET_ALL_SORT_BY_DESCRIPTION";    @Column(name = "DESCRIPTION", insertable = false, updatable = false, length = LENGTH_DESCRIPTION, nullable = false)    private String description;    @Id    @Column(name = "PACKAGE_TYPE", insertable = false, updatable = false, length = LENGTH_ID, nullable = false)    private String id;    @Override    public boolean equals(Object obj) {        boolean result = false;        if (obj instanceof PackageTypeEntity) {            if (obj == this) {                result = true;            } else {                PackageTypeEntity rhs = (PackageTypeEntity) obj;                result = new EqualsBuilder().append(getId(), rhs.getId())                        .append(getDescription(), rhs.getDescription()).isEquals();            }        }        return result;    }    /**     * Get description value.     *      * @return the description.     */    public String getDescription() {        return description;    }    @Override    public String getId() {        return id;    }    @Override    public int hashCode() {        return new HashCodeBuilder().append(getId()).append(getDescription()).toHashCode();    }    /**     * Set description value.     *      * @param description     *            value to set.     */    public void setDescription(String description) {        this.description = description;    }    @Override    public void setId(String id) {        this.id = id;    }    @Override    public String toString() {        return new ToStringBuilder(this).append("id", getId()).append("description", getDescription()).toString();    }}