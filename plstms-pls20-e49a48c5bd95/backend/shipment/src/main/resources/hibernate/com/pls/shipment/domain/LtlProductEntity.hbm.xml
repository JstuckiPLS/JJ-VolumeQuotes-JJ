<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <query name="com.pls.shipment.domain.LtlProductEntity.Q_ARCHIVE_PRODUCT">
        <![CDATA[
                UPDATE LtlProductEntity
                lpe SET lpe.status = 'I', lpe.modification.modifiedBy = :modifiedBy,
                lpe.modification.modifiedDate = :modifiedDate WHERE lpe.id = :productId
        ]]>
    </query>
    <query name="com.pls.shipment.domain.LtlProductEntity.Q_COUNT_PRODUCTS_BY_ID">
        <![CDATA[
                SELECT COUNT(lpe)
                FROM LtlProductEntity lpe WHERE lpe.customerId = :customerId AND lpe.id = :productId
        ]]>
    </query>
    <query name="com.pls.shipment.domain.LtlProductEntity.Q_GET_PRODUCT_LIST">
        <![CDATA[
                SELECT product FROM LtlProductEntity product
                WHERE product.customerId = :customerId AND (product.personId IS NULL OR product.personId = :personId) AND product.status = 'A'
        ]]>
    </query>
    <query name="com.pls.shipment.domain.LtlProductEntity.Q_GET_RECENT_PRODUCTS">
        <![CDATA[
                select max(p), max(lm.modification.createdDate)
                from LtlProductEntity p
                left join p.loadMaterials lm
                where p.customerId = :orgId
                    and p.status = 'A'
                    and (:commodityClass is null or p.commodityClass = :commodityClass)
                    and p.hazmat = :hazmat
                    and (p.personId is null or p.personId = :personId)
                group by p
                order by coalesce(max(lm.modification.createdDate), TO_DATE('1900/01/01', 'yyyy/mm/dd')) desc
        ]]>
    </query>
    <query name="com.pls.shipment.domain.LtlProductEntity.Q_GET_PRODUCTS_BY_FILTER">
        <![CDATA[
                select p
                from LtlProductEntity p
                inner join p.customer c
                where p.customerId = :orgId
                    and p.status = 'A'
                    and (:commodityClass is null or p.commodityClass = :commodityClass)
                    and p.hazmat = :hazmat
                    and (p.personId is null or p.personId = :personId)
                    and (:filter is null or (
                        (case when c.productListPrimarySort = 'PRODUCT_DESCRIPTION' or c.productListPrimarySort is null then 
                            (case when upper(coalesce(p.description, '')) || ' ' || upper(coalesce(p.productCode, '')) || ' ' || upper(coalesce(p.hazmatInfo.unNumber, '')) || ' ' || upper(coalesce(p.hazmatInfo.hazmatClass, '')) || ' ' || upper(coalesce(p.hazmatInfo.packingGroup, '')) like :filter then true else false end)
                         else
                            (case when upper(coalesce(p.productCode, '')) || ' ' || upper(coalesce(p.description, '')) || ' ' || upper(coalesce(p.hazmatInfo.unNumber, '')) || ' ' || upper(coalesce(p.hazmatInfo.hazmatClass, '')) || ' ' || upper(coalesce(p.hazmatInfo.packingGroup, '')) like :filter then true else false end)
                         end) = true
                    ))
                order by (case when c.productListPrimarySort = 'PRODUCT_DESCRIPTION' or c.productListPrimarySort is null then upper(p.description) else upper(p.productCode) end) asc
        ]]>
    </query>
    <query name="com.pls.shipment.domain.LtlProductEntity.Q_IS_PRODUCT_UNIQUE">
        <![CDATA[
                SELECT COUNT(p) FROM LtlProductEntity p
                WHERE p.customerId = :customerId AND ((:personId IS NULL AND p.personId IS NULL) OR p.personId = :personId)
                AND (:productId IS NULL OR p.id <> :productId) AND UPPER(p.description) = UPPER(:description) AND p.commodityClass = :commodityClass
                AND p.status = 'A'
        ]]>
    </query>
        <query name="com.pls.shipment.domain.LtlProductEntity.Q_GET_PRODUCT_BY_CODE_AND_NAME">
        <![CDATA[
                SELECT product
                FROM LtlProductEntity product
                WHERE product.description = :description 
                AND product.productCode = :productCode
        ]]>
    </query>
    <query name="com.pls.shipment.domain.LtlProductEntity.Q_GET_PRODUCT_BY_INFO">
        <![CDATA[
                SELECT product
                FROM LtlProductEntity product
                WHERE product.customerId = :orgId
                AND product.description = :description
                AND (:commodityClass is null or product.commodityClass = :commodityClass)
                And product.hazmat = :hazmat
        ]]>
    </query>
    <query name="com.pls.shipment.domain.LtlProductEntity.Q_GET_PRODUCT_BY_CLASS_AND_SKU">
        <![CDATA[
                SELECT product FROM LtlProductEntity product
                WHERE product.customerId = :orgId
                AND product.commodityClass = :commodityClass
                AND product.productCode = :productCode
                AND product.status = 'A'
        ]]>
    </query>
</hibernate-mapping>