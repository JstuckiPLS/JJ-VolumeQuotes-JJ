package com.pls.ax.custopenbalance.client.proxy;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.8 Generated source version: 2.2
 *
  * @author Thomas Clancy
*/
@WebServiceClient(name = "RoutingService", targetNamespace = "http://tempuri.org/", wsdlLocation
    = "http://exp-axbatch.quad.local:85/MicrosoftDynamicsAXAif60/PLSCustOpenBalanceHTTP/xppservice.svc?wsdl")
@SuppressWarnings("PMD")
public class RoutingService
    extends Service {

    private final static URL ROUTINGSERVICE_WSDL_LOCATION;
    private final static WebServiceException ROUTINGSERVICE_EXCEPTION;
    private final static QName ROUTINGSERVICE_QNAME = new QName("http://tempuri.org/", "RoutingService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL(
                "http://exp-axbatch.quad.local:85/MicrosoftDynamicsAXAif60/PLSCustOpenBalanceHTTP/xppservice.svc?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        ROUTINGSERVICE_WSDL_LOCATION = url;
        ROUTINGSERVICE_EXCEPTION = e;
    }

    public RoutingService() {
        super(getWsdlLocation(), ROUTINGSERVICE_QNAME);
    }

    public RoutingService(WebServiceFeature... features) {
        super(getWsdlLocation(), ROUTINGSERVICE_QNAME);
    }

    public RoutingService(URL wsdlLocation) {
        super(wsdlLocation, ROUTINGSERVICE_QNAME);
    }

    public RoutingService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ROUTINGSERVICE_QNAME);
    }

    public RoutingService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RoutingService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName);
    }

    /**
     *
     * @return returns TriCustOpenBalanceService
     */
    @WebEndpoint(name = "BasicHttpBinding_TriCustOpenBalanceService")
    public TriCustOpenBalanceService getBasicHttpBindingTriCustOpenBalanceService() {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_TriCustOpenBalanceService"),
            TriCustOpenBalanceService.class);
    }

    /**
     *
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy. Supported features
     * not in the <code>features</code> parameter will have their default values.
     * @return returns TriCustOpenBalanceService
     */
    @WebEndpoint(name = "BasicHttpBinding_TriCustOpenBalanceService")
    public TriCustOpenBalanceService getBasicHttpBindingTriCustOpenBalanceService(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "BasicHttpBinding_TriCustOpenBalanceService"),
            TriCustOpenBalanceService.class, features);
    }

    private static URL getWsdlLocation() {
        if (ROUTINGSERVICE_EXCEPTION != null) {
            throw ROUTINGSERVICE_EXCEPTION;
        }
        return ROUTINGSERVICE_WSDL_LOCATION;
    }

}
