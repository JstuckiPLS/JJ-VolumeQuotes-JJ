<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <query name="com.pls.core.domain.organization.NetworkEntity.Q_GET_ALL_NETWORK">
        <![CDATA[
                select NETW.id as id, NETW.name as name, FBU.unitCode as unitCode,
                       CC.companyCode as companyCode, CC.description as description, FCC.costCenterCode as costCenterCode
                  from NetworkEntity NETW, FinanBusnUnitEntity FBU, CompanyCodeEntity CC, FinanCostCenterEntity FCC
                 where FBU.networkId = NETW.id
                   and FBU.orgId = -1
                   and FBU.status = 'A'
                   and NETW.visible = 'Y'
                   and FBU.networkId = CC.networkId
                   and (FCC.companyCode = CC.companyCode or (FCC.companyCode = '00' and not exists
                            (select 1 from FinanCostCenterEntity ifcc where ifcc.companyCode = CC.companyCode)))
        ]]>
    </query>
    <query name="com.pls.core.domain.organization.NetworkEntity.Q_GET_UNIT_AND_COST_CENTER_CODES">
        <![CDATA[
                select FBU.unitCode as unitCode, FCC.costCenterCode as costCenterCode
                from OrganizationEntity ORG, FinanBusnUnitEntity FBU, FinanCostCenterEntity FCC
                where ORG.networkId = FBU.networkId
                and (case when (select count(1) from FinanBusnUnitEntity IFBU where IFBU.orgId = ORG.id) > 0
                          then ORG.id else -1 end) = FBU.orgId
                and (case when (select count(1) from FinanCostCenterEntity IFCC where IFCC.networkId = ORG.networkId) = 0
                          then '00' else ORG.companyCode end) = FCC.companyCode
                and FBU.status = 'A'
                and FCC.status = 'A'
                and ORG.id = :orgId
        ]]>
    </query>
    <query name="com.pls.core.domain.organization.NetworkEntity.Q_GET_ACTIVE_NETWORKS_BY_USER">
        <![CDATA[
                select new com.pls.core.domain.bo.SimpleValue(network.id, network.name)
                from NetworkUserEntity networkUser
                inner join networkUser.network network
                where networkUser.userId  = :personId
                and networkUser.status = 'A'
                order by network.name
        ]]>
    </query>
</hibernate-mapping>