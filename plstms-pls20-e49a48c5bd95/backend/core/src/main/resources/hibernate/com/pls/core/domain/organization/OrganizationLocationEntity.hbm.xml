<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <query name="com.pls.core.domain.organization.OrganizationLocationEntity.Q_GET_FOR_CUSTOMERS">
        <![CDATA[
                SELECT loc.id as id, loc.locationName as location, user.firstName || ' ' || user.lastName as accountExecutive,
                        acc.effectiveDate as startDate, acc.expirationDate as endDate, billTo.name as billTo, loc.defaultNode as defaultNode
                FROM OrganizationLocationEntity loc
                LEFT JOIN loc.accountExecutives acc WITH acc.status = 'A'
                LEFT JOIN acc.user user
                LEFT JOIN loc.billTo billTo
                WHERE loc.organization.id = :organizationId
                    AND loc.status = 'A'
                    AND ((acc.id = (select max(id) from AccountExecutiveEntity aee where aee.location.id = loc.id and aee.status = 'A')) or acc.id is null)
        ]]>
    </query>
    <query name="com.pls.core.domain.organization.OrganizationLocationEntity.Q_GET_FOR_SHIPMENT">
        <![CDATA[
                SELECT distinct ol.id as id,
                       ol.locationName as name,
                       ol.billTo.id as billToId,
                       ol.defaultNode as defaultNode
                FROM OrganizationLocationEntity ol
                join ol.organization o with o.id = :organizationId
                left join ol.customerLocationUsers clu with clu.status = 'A' and clu.personId = :personId
                left join o.network n
                left join n.networkUsers nu with nu.status = 'A' and nu.userId = :personId
                where ol.status = 'A'
                    and (nu.id is not null or clu is not null)
        ]]>
    </query>
    <query name="com.pls.core.domain.organization.OrganizationLocationEntity.Q_GET_LOCATIONS_FOR_AE">
        <![CDATA[
                SELECT COUNT(*)
                FROM OrganizationLocationEntity loc
                INNER JOIN loc.accountExecutives acc
                WHERE loc.organization.id = :organizationId
                    AND loc.status = 'A'
                    AND acc.status = 'A'
                    AND acc.personId = :personId
                    AND loc.id <> :locationId
        ]]>
    </query>
</hibernate-mapping>