<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration>
<configuration scan="true">
    <!-- try not to intersect with maven properties, otherwise maven will filter resource and substitute them -->
    <property name="application-home-folder" value="${catalina.home:-${HOME}}"/>

    <property resource="spring/application.properties" />
    <property file="${application-home-folder}/conf/plsapp.properties"/>

    <appender name="StdOut" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
          <evaluator>
            <expression>return message.contains("Could not refresh JMS Connection for destination") &amp;&amp; "true".equals("${logging.hideJmsConnectionError}");</expression>
          </evaluator>
          <OnMismatch>NEUTRAL</OnMismatch>
          <OnMatch>DENY</OnMatch>
        </filter>
        <encoder>
            <pattern>%d{yyyy-MM-dd_HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="File" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${application-home-folder}/logs/pls.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${application-home-folder}/logs/pls-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 50MB -->
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd_HH:mm:ss} [%thread] %-5level %c - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="Error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- deny all events with a level below ERROR -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <file>${application-home-folder}/logs/pls-error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${application-home-folder}/logs/pls-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 5MB -->
                <maxFileSize>5MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd_HH:mm:ss} [%thread] %-5level %c - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="SQL" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${application-home-folder}/logs/pls-sql.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${application-home-folder}/logs/pls-sql-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 5MB -->
                <maxFileSize>5MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd_HH:mm:ss} [%thread] %-5level %c - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="EDI" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${application-home-folder}/logs/edi.log</file>
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator> <!-- defaults to type ch.qos.logback.classic.boolex.JaninoEventEvaluator -->
                <expression>return logger.contains(".edi.");</expression>
            </evaluator>
            <OnMismatch>DENY</OnMismatch>
            <OnMatch>NEUTRAL</OnMatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${application-home-folder}/logs/edi-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 5MB -->
                <maxFileSize>5MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd_HH:mm:ss} [%thread] %-5level %c - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="WS" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${application-home-folder}/logs/webservices.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${application-home-folder}/logs/webservices-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 5MB -->
                <maxFileSize>5MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd_HH:mm:ss} [%thread] %-5level %c - %msg%n</pattern>
        </encoder>
    </appender>

    <if condition='"true".equals(property("logging.traceSQL"))'>
        <then>
            <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE">
                <appender-ref ref="SQL" />
            </logger>
            <logger name="org.hibernate.SQL" level="DEBUG">
                <appender-ref ref="SQL" />
            </logger>
            <logger name="org.hibernate.jdbc" level="DEBUG">
                <appender-ref ref="SQL" />
            </logger>
            <logger name="org.hibernate.hql" level="DEBUG">
                <appender-ref ref="SQL" />
            </logger>
            <logger name="org.springframework.jdbc.core" level="TRACE">
                <appender-ref ref="SQL" />
            </logger>
        </then>
    </if>

    <if condition='!"INFO".equals(property("logging.level"))'>
        <logger name="com.pls" level="${logging.level}">
            <appender-ref ref="File" />
        </logger>
    </if>

    <logger name="org.springframework.ws.server.MessageTracing" level="TRACE">
        <appender-ref ref="WS" />
    </logger>

    <root level="INFO">
        <appender-ref ref="StdOut" />
        <appender-ref ref="File" />
        <appender-ref ref="Error" />
        <appender-ref ref="EDI" />
    </root>
</configuration>