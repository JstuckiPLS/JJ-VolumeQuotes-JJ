<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <prerequisites>
        <maven>3.3.9</maven>
    </prerequisites>

    <artifactId>ui</artifactId>
    <packaging>war</packaging>

    <name>PLS2.0 - UI - Main WEB UI module</name>
    <description>LTL Rating UI module</description>

    <organization>
        <name>PLS Logistics Services</name>
        <url>http://www.plslogistics.com/</url>
    </organization>

    <parent>
        <groupId>com.pls</groupId>
        <artifactId>parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <build>
        <finalName>my-freight</finalName>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <excludes>
                    <exclude>package.json</exclude>
                    <exclude>build.config.js</exclude>
                    <exclude>Gruntfile.js</exclude>
                </excludes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.conf.js</include>
                </includes>
            </testResource>
            <testResource>
                <directory>${project.basedir}/src/test</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.*</include>
                </includes>
                <excludes>
                    <exclude>**/*.conf.js</exclude>
                </excludes>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- Tests related libs -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>test-utils</artifactId>
        </dependency>
    </dependencies>


    <profiles>
        <profile>
            <id>skipSCA</id>
            <build>
            </build>
        </profile>
        <profile>
            <id>JSLint</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>jslint-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>jslint-src</id>
                                <goals>
                                    <goal>jslint</goal>
                                </goals>
                                <configuration>
                                    <sourceJsFolder>${project.basedir}/src/main/webapp/resources/js</sourceJsFolder>
                                    <excludes>
                                        <!-- datepicker and typeahead are an adopted component so we are not responsible for
                                            it's code -->
                                        <exclude>commons/directives/pls-datepicker.js</exclude>
                                        <exclude>commons/directives/typeahead/typeahead.js</exclude>
                                        <!-- parseISODate is an adopted function found in Internet -->
                                        <exclude>commons/utils/date-time-utils.js</exclude>
                                        <!-- EMAIL_REGEXP from angular.js are copied, but non-valid from jslist point of view-->
                                        <exclude>commons/directives/pls-emails-separated-list.js</exclude>
                                        <!-- Skip error: 'util' has not been fully defined yet. -->
                                        <exclude>quotes/utils/cost-details-utils.js</exclude>
                                        <exclude>commons/directives/checklist-model.js</exclude>
                                    </excludes>
                                </configuration>
                                <phase>compile</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>ProductionPreparation</id>
            <build>
                <resources>
                    <resource>
                        <directory>${project.basedir}/src/main/resources</directory>
                        <excludes>
                            <exclude>package.json</exclude>
                            <exclude>build.config.js</exclude>
                            <exclude>Gruntfile.js</exclude>
                        </excludes>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy grunt specific files</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>${project.basedir}/src/main/resources</directory>
                                            <includes>
                                                <include>build.config.js</include>
                                                <include>Gruntfile.js</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <outputDirectory>${project.build.directory}/node/</outputDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy package json file</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <filters>
                                        <filter>${project.build.outputDirectory}/git.properties</filter>
                                    </filters>
                                    <resources>
                                        <resource>
                                            <directory>${project.basedir}/src/main/resources</directory>
                                            <filtering>true</filtering>
                                            <includes>
                                                <include>package.json</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <outputDirectory>${project.build.directory}/node/</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>NodeJS - install dependencies</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.build.directory}/node/</workingDirectory>
                                    <executable>${project.build.directory}/node/node</executable>
                                    <arguments>
                                        <argument>node_modules/npm/bin/npm-cli.js</argument>
                                        <argument>install</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>NodeJS - run grunt tasks</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.build.directory}/node/</workingDirectory>
                                    <executable>${project.build.directory}/node/node</executable>
                                    <arguments>
                                        <argument>node_modules/grunt-cli/bin/grunt</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <archive>
                                <addMavenDescriptor>false</addMavenDescriptor>
                            </archive>
                            <warSourceExcludes>WEB-INF/**</warSourceExcludes>
                            <failOnMissingWebXml>false</failOnMissingWebXml>
                            <packagingExcludes>resources/js/**,WEB-INF/**</packagingExcludes>
                            <webResources>
                                <resource>
                                    <includes>
                                        <include>**/*.json</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/node/bin</directory>
                                    <targetPath>resources</targetPath>
                                    <includes>
                                        <include>assets/*.min.js</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/node/bin</directory>
                                    <includes>
                                        <include>**/*.html</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/node/bin/</directory>
                                    <targetPath>resources/css</targetPath>
                                    <includes>
                                        <include>app.css</include>
                                        <include>jasper.css</include>
                                    </includes>
                                </resource>
                            </webResources>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>UIUnitTests</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>npm install</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                            
                                <!-- optional: default phase is "generate-resources" -->
                                <phase>generate-test-resources</phase>
                            
                                <configuration>
                                    <workingDirectory>${project.build.directory}/node/</workingDirectory>
                                    <!-- optional: The default argument is actually
                                    "install", so unless you need to run some other npm command,
                                    you can remove this whole <configuration> section.
                                    -->
                                    <arguments>install</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>NodeJS - install dependencies</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.build.directory}/node/</workingDirectory>
                                    <executable>${project.build.directory}/node/node</executable>
                                    <arguments>
                                        <argument>node_modules/npm/bin/npm-cli.js</argument>
                                        <argument>install</argument>
                                        <argument>karma</argument>
                                        <argument>karma-ng-scenario</argument>
                                        <argument>jasmine-core@2.3.4</argument>
                                        <argument>karma-jasmine</argument>
                                        <argument>karma-ng-html2js-preprocessor</argument>
                                        <argument>karma-phantomjs-launcher</argument>
                                        <argument>karma-junit-reporter@0.3.8</argument>
                                        <argument>karma-spec-reporter</argument>
                                        <!-- Not supported on linux system -->
                                        <!-- <argument>karma-ie-launcher</argument> -->
                                        <argument>karma-firefox-launcher</argument>
                                        <argument>phantomjs-prebuilt</argument>
                                        <argument>os-tmpdir</argument>
                                    </arguments>
                                    <skip>${maven.test.skip}</skip>
                                </configuration>
                            </execution>
                            <execution>
                                <id>Karma - run unit tests</id>
                                <!-- JS test should be run before java tests. This is required to correctly gathered 
                                    statistics by Jenkins -->
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.build.directory}/node/</workingDirectory>
                                    <executable>${project.build.directory}/node/node</executable>
                                    <arguments>
                                        <argument>node_modules/karma/bin/karma</argument>
                                        <argument>start</argument>
                                        <argument>${UITest.unit.config}</argument>
                                        <argument>--single-run</argument>
                                    </arguments>
                                    <skip>${maven.test.skip}</skip>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>


        <profile>
            <id>UIIntegrationTests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>Karma - run unit tests</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <environmentVariables>
                                        <CHROME_BIN>${UITests.chromeBin}</CHROME_BIN>
                                    </environmentVariables>
                                    <workingDirectory>${project.build.directory}/node/</workingDirectory>
                                    <executable>${project.build.directory}/node/node</executable>
                                    <arguments>
                                        <argument>node_modules/karma/bin/karma</argument>
                                        <argument>start</argument>
                                        <argument>${UITest.e2e.config}</argument>
                                        <argument>--single-run</argument>
                                        <argument>--capture-timeout 100000</argument>
                                    </arguments>
                                    <skip>${maven.test.skip}</skip>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>jetty-start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>deploy-war</goal>
                                </goals>
                                <configuration>
                                    <contextHandlers>
                                        <contextHandler implementation="org.eclipse.jetty.webapp.WebAppContext">
                                            <contextPath>/my-freight</contextPath>
                                            <war>${project.build.directory}/my-freight.war</war>
                                        </contextHandler>
                                        <contextHandler implementation="org.eclipse.jetty.webapp.WebAppContext">
                                            <contextPath>/restful</contextPath>
                                            <war>${project.basedir}/../restful/rest-services/target/restful.war</war>
                                        </contextHandler>
                                    </contextHandlers>
                                    <daemon>true</daemon>
                                </configuration>
                            </execution>
                            <execution>
                                <id>jetty-stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
